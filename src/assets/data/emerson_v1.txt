CREATE TABLE IF NOT EXISTS CURRENTDATABASEVERSION (DATABASEVERSION INTEGER);
CREATE TABLE IF NOT EXISTS User (ID INTEGER PRIMARY KEY  NOT NULL, ClarityID TEXT, Currency TEXT, Default_View TEXT, Email TEXT, Language TEXT, LanguageId INTEGER, Name TEXT, OFSCId TEXT, Password TEXT, Time_Zone TEXT, Type TEXT, User_Name TEXT, Work_Day TEXT, Work_Hour TEXT, Login_Status TEXT, Sync_Status BOOLEAN, Last_Updated TEXT, Last_Updated_Task TEXT, Last_Updated_Internal TEXT, Last_Updated_Task_Detail TEXT, Last_Updated_Project TEXT, Last_Updated_LOV TEXT, Last_Updated_SR TEXT, Last_Updated_Delete TEXT, encrypt TEXT, userName TEXT, userRole TEXT);
CREATE TABLE IF NOT EXISTS Task (Task_Number INTEGER PRIMARY KEY  NOT NULL, Job_Description TEXT, Duration TEXT, Task_Status TEXT, Customer_Name TEXT, Street_Address TEXT, City TEXT, State TEXT, Country TEXT, Zip_Code TEXT, Expense_Method TEXT, Labor_Method TEXT, Travel_Method TEXT, Material_Method TEXT, Service_Request TEXT, Assigned TEXT, Start_Date TEXT, End_Date TEXT, Submit_Status TEXT, Email TEXT, Date TEXT, Type TEXT, Activity_Id TEXT, Work_Phone_Number TEXT, Mobile_Phone_Number TEXT, Address1 TEXT, SR_ID TEXT, Name TEXT, Contact_Name TEXT, ResourceId TEXT, Charge_Type TEXT, Project_Number TEXT, Sync_Status BOOLEAN, Customer_PONumber TEXT, Customer_ID TEXT, Business_Group TEXT, Contract_Number TEXT, Contract_Desc_Link TEXT );
CREATE TABLE IF NOT EXISTS Internal (Activity_Id INTEGER PRIMARY KEY  NOT NULL, Start_time TEXT, End_time TEXT, Activity_type TEXT, Status TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS InstallBase (InstalledBaseId INTEGER PRIMARY KEY AUTOINCREMENT, Product_Line TEXT, Serial_Number TEXT, System_ID TEXT, TagNumber TEXT, Original_PO_Number TEXT, Task_Number TEXT, Service_Request TEXT, Assigned TEXT, Start_Date TEXT, End_Date TEXT, ResourceId TEXT, Item_Number TEXT, Description TEXT, Status_Id TEXT, Manufacturer_Id TEXT , Updated_By TEXT( 300 ), Updated_Date DATE, Sync_Status BOOLEAN,  Customer_Id TEXT, Customer_Name TEXT, Product_Id TEXT, Installed_Base_ID INTEGER);
CREATE TABLE IF NOT EXISTS Contact (Contact_ID INTEGER, Customer_Name TEXT, Contact_Name TEXT, Home_Phone TEXT, Mobile_Phone TEXT, Fax_Phone TEXT, Office_Phone TEXT, Email TEXT, Foreign_Key TEXT, Task_Number TEXT, Service_Request TEXT, Assigned TEXT, Start_Date TEXT, End_Date TEXT, Default_Value TEXT, Contacts_Preferences TEXT, ResourceId TEXT, First_Name TEXT, Last_Name TEXT, Contact_Id_PK INTEGER PRIMARY KEY AUTOINCREMENT);
CREATE TABLE IF NOT EXISTS Note (Notes_ID INTEGER, Notes TEXT, Notes_type TEXT, Note_Description TEXT, Created_By TEXT, MobileCreatedBy TEXT, Task_Number TEXT, Service_Request TEXT, Assigned TEXT, Start_Date TEXT, End_Date TEXT, Last_updated_date TEXT, Incident TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS Attachment (Attachment_Id INTEGER PRIMARY KEY AUTOINCREMENT, File_Name TEXT, File_Type TEXT, File_Path TEXT, Type TEXT, AttachmentType TEXT, Created_Date TEXT, Task_Number TEXT, SRID TEXT, Attachment_Status TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS OverTime (OverTime_Shift_Code_ID TEXT, Overtimeshiftcode TEXT, Project_Number TEXT, Technician_ID TEXT, Field_Job_ID TEXT, Project TEXT, Start_Date TEXT, Date_Completed TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS ShiftCode (Shift_Code_ID TEXT, ShiftCodeName TEXT, Project_Number TEXT, Technician_ID TEXT, Field_Job_ID TEXT, Project TEXT, Start_Date TEXT, Date_Completed TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS FieldJobName (TaskCode INTEGER, JobName TEXT, Project_Number TEXT, Technician_ID TEXT, Project TEXT, Start_Date TEXT, Date_Completed TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS ChargeMethod (ID INTEGER PRIMARY KEY  NOT NULL, Value TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS ChargeType (ID INTEGER PRIMARY KEY  NOT NULL, Value TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS ExpenseType (ID INTEGER PRIMARY KEY  NOT NULL, Value TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS NoteType (ID INTEGER PRIMARY KEY  NOT NULL, Value TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS WorkType (ID INTEGER PRIMARY KEY  NOT NULL, Value TEXT, NC TEXT, C TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS Item (ID INTEGER PRIMARY KEY  NOT NULL, Value TEXT, Type TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS Currency (ID INTEGER PRIMARY KEY  NOT NULL, Value TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS UOM (ID INTEGER PRIMARY KEY  NOT NULL, Value TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS Time (Time_Id INTEGER PRIMARY KEY AUTOINCREMENT, timeDefault TEXT, Field_Job_Name TEXT, Field_Job_Name_Id TEXT, Charge_Type TEXT, Charge_Type_Id TEXT, Charge_Method TEXT, Charge_Method_Id TEXT, Work_Type TEXT, Work_Type_Id TEXT, Item TEXT, Item_Id TEXT, Description TEXT, Time_Code TEXT, Time_Code_Id TEXT,Time_Code_Value TEXT, Shift_Code TEXT, Shift_Code_Id TEXT, Shift_Code_Value TEXT, Date TEXT, Duration TEXT, Comments TEXT, Task_Number TEXT, ResourceId TEXT, Start_Time TEXT, End_Time TEXT, OSC_Id TEXT);
CREATE TABLE IF NOT EXISTS Expense (Expense_Id INTEGER PRIMARY KEY AUTOINCREMENT, expenseDefault TEXT, Date TEXT, Expense_Type TEXT, Expense_Type_Id TEXT, Amount TEXT, Currency TEXT, Currency_Id TEXT, Distance TEXT, UOM TEXT, UOM_Id TEXT, Charge_Method TEXT, Charge_Method_Id TEXT, Justification TEXT, Task_Number TEXT, ResourceId TEXT, OSC_Id TEXT);
CREATE TABLE IF NOT EXISTS Material (Material_Id INTEGER PRIMARY KEY AUTOINCREMENT, materialDefault TEXT, Charge_Type TEXT, Charge_Type_Id TEXT, Description TEXT, ItemName TEXT, Product_Quantity TEXT, Task_Number TEXT, ResourceId TEXT, UOM TEXT);
CREATE TABLE IF NOT EXISTS Material_Serial (Material_Serial_Id INTEGER PRIMARY KEY AUTOINCREMENT, Material_Id_Fk INTEGER, Serial_In TEXT, Serial_Out TEXT, Serial_Number TEXT, Task_Number TEXT, OSC_Id TEXT);
CREATE TABLE IF NOT EXISTS Notes (Notes_Id INTEGER PRIMARY KEY AUTOINCREMENT, noteDefault TEXT, Note_Type TEXT, Note_Type_Id TEXT, Date TEXT, Created_By TEXT, Notes TEXT, Task_Number TEXT, ResourceId TEXT, OSC_Id TEXT);
CREATE TABLE IF NOT EXISTS Engineer (Engineer_Id INTEGER PRIMARY KEY  NOT NULL, followUp boolean, salesQuote boolean, salesVisit boolean, salesLead boolean, Follow_Up TEXT, Spare_Quote TEXT, Sales_Visit TEXT, Sales_Head TEXT, Sign_File_Path TEXT, File_Name TEXT, Task_Number TEXT, isCustomerSignChecked TEXT, customerComments TEXT, ResourceId TEXT,Cust_Sign_File TEXT ,Engg_Sign_Time TEXT, Cust_Sign_Time TEXT);
CREATE TABLE IF NOT EXISTS Tool (ID INTEGER PRIMARY KEY AUTOINCREMENT, Tool_Name TEXT, Task_Number TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS TimeZone (ID INTEGER PRIMARY KEY AUTOINCREMENT, time_zone  TEXT, UNIQUE(time_zone));
CREATE TABLE IF NOT EXISTS Country (Country_Code TEXT,Country_Name TEXT ,UNIQUE(Country_Code, Country_Name));
CREATE TABLE IF NOT EXISTS Customer (Customer_Id INTEGER PRIMARY KEY  NOT NULL, Customer_Name TEXT, Job_responsibilty TEXT, Email TEXT, Task_Number INTEGER, isCustomerSignChecked TEXT, customerComments TEXT, ResourceId INTEGER,Cust_Sign_File TEXT ,Cust_Sign_Time TEXT, SSE_Rules BOOLEAN, Safety_Rules BOOLEAN, Remarks TEXT, Annuel_PdP BOOLEAN, Specific_PdP BOOLEAN, Working_license BOOLEAN, Emerson_Safety BOOLEAN, Home_Security BOOLEAN, do_not_survey BOOLEAN);
CREATE TABLE IF NOT EXISTS Address (AddressId INTEGER PRIMARY KEY AUTOINCREMENT,Business_Unit TEXT( 300 ),Business_Unit_Code TEXT( 20 ),Address_Line_1   TEXT( 300 ),Address_Line_2   TEXT( 300 ),Zip_code TEXT( 20 ),City  TEXT( 300 ),State  TEXT( 300 ),Country TEXT( 200 ),Language TEXT( 200 ),IsDefault BOOLEAN,Updated_By TEXT( 300 ),Updated_Date DATE,Sync_Status BOOLEAN, Telephone TEXT, Fax TEXT, isEnabled BOOLEAN, id INTEGER UNIQUE ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS User_Preferences (ID INTEGER PRIMARY KEY AUTOINCREMENT,ResourceID TEXT,Email TEXT( 300 ),Default_Currency TEXT,Preferred_language TEXT,Preferred_language_Id TEXT,Timezone DATE,FSR_PrintNote BOOLEAN,FSR_PrintExpense BOOLEAN,FSR_PrintMaterial BOOLEAN,FSR_PrintTime BOOLEAN,FSR_PrintSignature BOOLEAN,FSR_PrintInstallBase BOOLEAN, FSR_PrintEUISO BOOLEAN, FSR_PrintAttachment BOOLEAN, Date_Format TEXT ,AddressId TEXT, AddressIdCh TEXT, SelectedLanguage TEXT);
CREATE TABLE IF NOT EXISTS Sync_Log (ID INTEGER PRIMARY KEY AUTOINCREMENT, Start_Date DATE,End_Date DATE,Status TEXT,UserId INTEGER,Message TEXT );
CREATE TABLE IF NOT EXISTS MST_Languages (Lang_Id INTEGER PRIMARY KEY, Lang_Name TEXT( 20 ), Code TEXT( 05 ), Is_Active BOOLEAN, isEnabled BOOLEAN, Sync_Status BOOLEAN, id INTEGER UNIQUE ON CONFLICT REPLACE, UNIQUE(Lang_id));
CREATE TABLE IF NOT EXISTS Language_Key_Mappings ( Lang_Id INTEGER REFERENCES MST_languages ( id ), Key_Id  INTEGER REFERENCES MST_Translation_Key ( id ), Value TEXT, Sync_Status BOOLEAN, PRIMARY KEY ( Lang_Id, Key_Id )  ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS MST_Translation_Key (Key_Id INTEGER PRIMARY KEY, Key_Name TEXT( 200 ), Sync_Status BOOLEAN, id INTEGER UNIQUE ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS User_Feedback (Feedback_Id INTEGER PRIMARY KEY AUTOINCREMENT, Resource_Id TEXT, User_Email TEXT,Comments TEXT, Is_Reviewed TEXT, Reviewed_By TEXT, User_Location TEXT, Feedback_Date TEXT, Review_Date TEXT, Sync_Date TEXT, QId INTEGER, Rating INTEGER, Sync_Status BOOLEAN, id INTEGER UNIQUE ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS MST_Feedback_Questions (QId INTEGER PRIMARY KEY AUTOINCREMENT, Questions TEXT, Sync_Status BOOLEAN, id INTEGER UNIQUE ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS Product (ID INTEGER PRIMARY KEY  NOT NULL, Value TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS Status (ID INTEGER PRIMARY KEY  NOT NULL, Value TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS Manufacturer (ID INTEGER PRIMARY KEY  NOT NULL, Value TEXT, ResourceId TEXT);
CREATE TABLE IF NOT EXISTS Work_Schedule (Schedule_Time_Id INTEGER PRIMARY KEY, Record_Type TEXT, Start_Date TEXT, End_Date TEXT, Shift_Label TEXT, Shift_Type TEXT, Work_Time_Start TEXT, Work_Time_End TEXT, Is_Working BOOLEAN, Recurrence_Type TEXT, Recur_Every INTEGER, Weekdays TEXT, ResourceId TEXT, Day_From TEXT, Day_To TEXT, Comments TEXT);
INSERT OR IGNORE INTO TimeZone(time_zone) Values ('(UTC-05:00) New York - ET');
INSERT OR IGNORE INTO TimeZone(time_zone) Values ('(UTC+00:00) London - GMT');
INSERT OR IGNORE INTO TimeZone(time_zone) Values ('(UTC+00:00) Etc/UTC - UTC');
INSERT OR IGNORE INTO TimeZone(time_zone) Values ('(UTC+08:00) Beijing- CT');
INSERT OR IGNORE INTO TimeZone(time_zone) Values ('(UTC+01:00) Central European - CET');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('AD','Andorra');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('AE','United Arab Emirates');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('AF','Afghanistan');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('AG','Antiqua and Barbuda');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('AI','Anguilla');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('AL','Albania');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('AM','Armenia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('AN','Netherlands Antilles');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('AQ','Antarctica');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('AR','Argentina');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('AS','American Samoa');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('AT','Austria');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('AU','Australia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('AW','Aruba');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('AZ','Azerbaijan');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('BB','Barbados');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('BD','Bangladesh');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('BE','Belgium');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('BF','Burkina Faso');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('BG','Bulgaria');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('BH','Bahrain');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('BI','Burundi');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('BJ','Benin');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('BM','Bermuda');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('BN','Brunei');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('BO','Bolivia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('BR','Brazil');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('BS','Bahamas');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('BT','Bhutan');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('BV','Bouvet Islands');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('BY','Belarus');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('BZ','Belize');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('CA','Canada');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('CF','Central African Republic');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('CG','Congo');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('CH','Switzerland');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('CI','Cote D Ivoire');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('CL','Chile');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('CM','Cameroon');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('CN','China');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('CO','Colombia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('CR','Costa Rica');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('CV','Cape Verde');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('CY','Cyprus');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('CZ','Czech Republic');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('DE','Germany');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('DJ','Djibouti');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('DK','Denmark');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('DM','Dominica');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('DO','Dominican Republic');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('DZ','Algeria');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('EC','Equador');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('EE','Estonia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('EG','Egypt');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('EH','Western Sahara');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('ER','Eritrea');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('ES','Spain');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('ET','Ethiopia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('FI','Finland');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('FJ','Fiji');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('FK','Falkland Islands');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('FM','Federated States of Micronesia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('FO','Faroe Islands');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('FR','France');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('FX','Metropolitan France');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('GA','Gabon');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('GB','United Kingdom');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('GD','Grenada');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('GE','Georgia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('GF','French Guiana');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('GH','Ghana');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('GI','Gibraltar');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('GL','Greenland');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('GM','Gambia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('GN','Guinea');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('GP','Guadeloupe');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('GQ','Equatorial Guinea');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('GR','Greece');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('GT','Guatemala');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('GU','Guam');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('GW','Guinea Bissau');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('GY','Guyana');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('HK','Hong Kong');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('HN','Honduras');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('HR','Croatia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('HT','Haiti');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('HU','Hungary');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('ID','Indonesia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('IE','Ireland');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('IL','Israel');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('IN','India');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('IO','British Indian Ocean Territory');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('IS','Iceland');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('IT','Italy');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('JM','Jamaica');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('JO','Jordan');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('JP','Japan');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('KE','Kenya');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('KG','Kyrgyzstan');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('KH','Cambodia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('KI','Kiribati');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('KM','Comoros');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('KN','St Kitts and Nevis');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('KR','Republic of Korea');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('KW','Kuwait');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('KY','Cayman Islands');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('KZ','Kazakhstan');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('LA','Laos');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('LB','Lebanon');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('LC','St Lucia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('LI','Liechtenstein');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('LK','Sri Lanka');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('LR','Liberia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('LS','Lesotho');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('LT','Lithuania');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('LU','Luxembourg');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('LV','Latvia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('MA','Morocco');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('MD','Moldova');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('MG','Madagascar');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('MH','Marshall Islands');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('MK','The former Yugoslav Republic of Macedonia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('ML','Mali');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('MN','Mongolia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('MO','Macau');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('MP','Northern Mariana Islands');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('MQ','Martinique');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('MR','Mauritania');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('MT','Malta');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('MV','Maldives');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('MW','Malawi');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('MX','Mexico');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('MY','Malaysia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('MZ','Mozambique');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('NA','Namibia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('NC','New Caledonia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('NE','Niger');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('NG','Nigeria');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('NI','Nicaragua');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('NL','Netherlands');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('NO','Norway');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('NP','Nepal');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('NR','Nauru');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('NZ','New Zealand');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('OM','Oman');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('PA','Panama');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('PE','Peru');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('PF','French Polynesia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('PG','Papua New Guinea');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('PH','Philippines');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('PK','Pakistan');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('PL','Poland');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('PN','Pitcairn');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('PR','Puerto Rico');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('PT','Portugal');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('PW','Palau');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('PY','Paraguay');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('QA','Qatar');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('RE','Reunion');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('RO','Romania');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('RU','Russia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('SA','Saudi Arabia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('SB','Solomon Islands');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('SC','Seychelles');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('SD','Sudan');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('SE','Sweden');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('SG','Singapore');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('SH','St Helena');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('SI','Slovenia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('SJ','Svalbard and Jan Mayen Islands');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('SK','Slovakia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('SL','Sierra Leone');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('SN','Senegal');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('SO','Somalia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('SR','Suriname');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('ST','Sao Tome and Principe');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('SV','El Salvador');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('SY','Syria');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('SZ','Swaziland');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('TC','Turks and Caicos Islands');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('TD','Chad');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('TG','Togo');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('TH','Thailand');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('TJ','Tajikistan');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('TM','Turkmenistan');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('TO','Tonga');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('TR','Turkey');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('TT','Trinidad and Tobago');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('TV','Tuvalu');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('TW','Taiwan');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('TZ','Tanzania');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('UA','Ukraine');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('UG','Uganda');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('US','United States');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('UY','Uruguay');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('UZ','Uzbekistan');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('VA','Vatican City');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('VC','St Vincent and the Grenadines');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('VE','Venezuela');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('VI','British Virgin Islands');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('VN','Vietnam');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('VU','Vanuatu');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('YE','Yemen');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('YT','Mayotte');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('YU','Yugoslavia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('ZA','South Africa');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('ZM','Zambia');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('ZR','Zaire');
INSERT OR IGNORE INTO Country(Country_Code,Country_Name) Values ('ZW','Zimbabwe');
INSERT INTO CURRENTDATABASEVERSION (DATABASEVERSION) Values (1);